akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  http {
    client {
      # The time after which an idle connection will be automatically closed.
      # Set to `infinite` to completely disable idle timeouts.
      idle-timeout = "infinite"
    }
    host-connection-pool {
      # The maximum number of open requests accepted into the pool across all
      # materializations of any of its client flows.
      # Protects against (accidentally) overloading a single pool with too many client flow materializations.
      # Note that with N concurrent materializations the max number of open request in the pool
      # will never exceed N * max-connections * pipelining-limit.
      # Must be a power of 2 and > 0!
      max-open-requests = 512
    }
  }
}

crawler {
  hbase {
    table = "testPage"
    zookeeperQuorum = "localhost"
    zookeeperQuorum = ${?ZOOKEEPER_TEST_QUORUM}
  }
  httpClient {
    userAgent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36"
    throttle = 1000
    timeout = 60000
    phantom {
      path = "/opt/phantomjs-2.1.1-linux-x86_64/bin/phantomjs"
      windowWidth: 1920
      windowHeight: 1080
    }
  }
}
